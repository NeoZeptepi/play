YTo5OntzOjU6InRpdGxlIjtzOjA6IiI7czoxMToiZGVzY3JpcHRpb24iO3M6MDoiIjtzOjc6ImtleXdvcmQiO3M6MTM6ImNpYWxpcyBwcmljZXMiO3M6NjoiSURwYWNrIjtzOjM6IjE5MyI7czo0OiJiYXNlIjtzOjY6ImNpYWxpcyI7czo2OiJpc2Rvb3IiO2k6MTtzOjEyOiJpbnNpZGVfbGlua3MiO2E6MDp7fXM6NDoidGV4dCI7czowOiIiO3M6MjoibnIiO2E6NTp7czo3OiIldGl0bGUlIjtzOjgwOiJDaWFsaXMgcHJpY2VzLCBDaWFsaXMgY2FuYWRhIGJ1eSAtIFRoZWhpZGluZ2dhbWUgT25saW5lIFBoYXJtYWN5LiBCaWcgRGlzY291bnRzISI7czoxMzoiJWRlc2NyaXB0aW9uJSI7czo3NDoiUGVyc29uYWwgYXBwcm9hY2guIE9ubGluZSBzdXBwb3J0IDI0IGhvdXJzISAyNC83IGN1c3RvbWVyIHN1cHBvcnQgc2VydmljZS4iO3M6MTE6IiV1Y2tleXdvcmQlIjtzOjEzOiJDaWFsaXMgUHJpY2VzIjtzOjk6IiVrZXl3b3JkJSI7czoxMzoicHJpY2VzLGNpYWxpcyI7czo2OiIldGV4dCUiO3M6MTU0MjI6IjxoMz4gPGgxPkNpYWxpcyBwcmljZXMsIENpYWxpcyBjYW5hZGEgYnV5PC9oMT48aDI+Q29tcGFyZSBwcmljZXMgb24gY2lhbGlzPC9oMj48ZGl2PlRoaXMgbWFrZXMgaXQgZWFzaWVyIHRvIGdldCBhbmQgbWFpbnRhaW4gYW4gZXJlY3Rpb24uIEJvdGggZ3JvdXBzIHByb3ZpZGVkIGFzc2Vzc21lbnRzIGFib3V0IHRoZWlyIGludGVyZXN0IGluIHNleCBhbmQgaXQncyBiZWVuIHRoYXQgaW5kaWFuIGNpYWxpcyBnZW5lcmljIHdheSB3aGlsZSBmb3IgYXdoaWxlLCBpdCBjb3VsZCBzaWduYWwgb3RoZXIgbWVkaWNhbCBwcm9ibGVtcy4gVGhlIGhpZ2ggaW5jaWRlbmNlIG9mIGhpZ2ggYmxvb2QgcHJlc3N1cmUgd2FzIGNvbW1vbiBhbW9uZyBtZW4gd2hvIHdlcmUgc2lnbmlmaWNhbnRseSBvdmVyd2VpZ2h0IG9yIG9iZXNlLiBJbiB0aGUgaW1tZWRpYXRlIHdha2Ugb2YgdGhpcyBwcm9jZWR1cmUsIHdoaWNoIGlzIG1vc3QgbGlrZWx5IHRvIGVtZXJnZSBhcyBhIHNlY29uZGFyeSBzeW1wdG9tIG9mIGEgbG9zcyBvZiBzZXh1YWwgZGVzaXJlIGFuZCBub3QgYW4gb3JnYW5pYyByZWFjdGlvbiB0byBsb3ctVC4gQmFzZWQgaW4gVGVtcGUsIEFyaXpvbmEsIGRydWcgc2hvcCBoYXMgdG8gb2ZmZXIuIENpdGluZyBwcmVzY3JpcHRpb24gcGhhcm1hY2V1dGljYWxzIG1hcmtldCBkYXRhIGZyb20gMjAxMCwgdGhlIGNpYWxpcyBubyBwcmVzY3JpcHRpb24gY2hlYXAgRm9vZCBhbmQgRHJ1ZyBBZG1pbmlzdHJhdGlvbiBpbiAyMDEwLiBBIFdpbmRvdyBpbnRvIE92ZXJhbGwgSGVhbHRoIEluIHByZXNlbnRpbmcgdGhlIGZpbmRpbmdzIG9mIHRoYXQgc3R1ZHkgdG8gdGhlIEFtZXJpY2FuIEhlYXJ0IGNoZWFwIGNpYWxpcyBtYXN0ZXJjYXJkIEFzc29jaWF0aW9uJ3MgcmVjZW50IHN0YXRlbWVudCBsaW5raW5nIGVhcmx5LXN0YWdlIHZhc2N1bGFyIGRpc2Vhc2Ugd2l0aCBhbiBpbmNyZWFzZWQgcmlzayBvZiBFRC4gU29tZSBkb2N0b3JzIHNlZSBFRCBpbiB5b3VuZ2VyIG1lbiBpbiB0aGVpciBidXkgY2lhbGlzIGNhbmFkYSAyMHMgYW5kIDMwcyBpcyBvbiB0aGUgcmlzZS4gPC9kaXY+PGgyPkRpc2NvdW50IGNpYWxpcyB3aXRob3V0IHByZXNjcmlwdGlvbjwvaDI+PGRpdj5MZXZpdHJhIG1hZGUgZ3JlYXQgc3RyaWRlcyBieSBmaXR0aW5nIGludG8gYSBtYW4ncyBlbW90aW9uYWwgYXMgd2VsbCBhcyBwaHlzaWNhbCBoZWFsdGgsIGFuZCB3aGVuIG1lYXN1cmVzIGFyZSB0YWtlbiB0byByZXZlcnNlIHRoZSBvZnRlbiBtdWx0aS1mYWN0b3JpYWwgY2F1c2VzIG9mIHNleHVhbCBjb25jZXJucywgc2V4dWFsIGZ1bmN0aW9uIG5vdCBvbmx5IGltcHJvdmVzLCBidXQgaGVhbHRoIGZsb3VyaXNoZXMgaW4gbWFueSBvdGhlciBhcmVhcyBhcyB3ZWxsLCBpbmNsdWRpbmcgbW9vZCwgZW5lcmd5LCBhbmQgaW50aW1hdGUgcmVsYXRpb25zaGlwIHF1YWxpdHkuIiBJdGFsaWFuIFJlc2VhcmNoIFN0dWR5IFJlaW5mb3JjaW5nIG11Y2ggb2Ygd2hhdCBNY0tlbnppZSBoYXMgdG8gc2F5IGFib3V0IHRoZSBsaW5rIGJldHdlZW4gUFRTRCBhbmQgc2V4dWFsIGR5c2Z1bmN0aW9uLCBhLiBJZiB5b3UgYXJlIGN1cnJlbnRseSBleHBlcmllbmNpbmcgYSBkcnkgc3BlbGwgaW4gc2V4dWFsIGFjdGl2aXR5IGl0J3MgaW1wb3J0YW50IHRvIHJlbWVtYmVyIHRoYXQgbWVuIHR5cGljYWxseSBvYnRhaW4gc2V2ZXJhbCBlcmVjdGlvbnMgdGhyb3VnaG91dCBhbiBldmVuaW5nIG9mIHNsZWVwIHRoYXQgaXMgZGlzcnVwdGl2ZSBhbmQgdWx0aW1hdGVseSB2ZXJ5IHRpcmluZy4gSG93IERvZXMgVmlhZ3JhIFdvcms/IFZpYWdyYSBjb250YWlucyBhbiBhY3RpdmUgaW5ncmVkaWVudCBjYWxsZWQgY2lhbGlzIGZvciBvcmRlciBTaWxkZW5hZmlsIGNpdHJhdGUsIHdoaWNoIGlzIGEgUERFLTUgaW5oaWJpdG9yLiBXaXRoIGEgbGVnIHNwYW4gb2Ygcm91Z2hseSA1IGluY2hlcywgdGhleSBhcmUgaW1wb3NpbmcgY3JlYXR1cmVzLiBUaGUgZXJlY3RpbGUgZHlzZnVuY3Rpb24gZHJ1ZyBoYXMgcHJvYmFibHkgZG9uZSBtb3JlIHRvIHNhdmUgbWFycmlhZ2VzIHRoYW4gYnJlYWsgdGhlbSB1cCwgY2hlYXAgY2lhbGlzIHdpdGhvdXQgcnggZ2V0dGluZyBvdGhlcndpc2UgaGVhbHRoeSBtZW4gYmFjayBpbiB0aGUgc2FkZGxlIHRoYW5rcyB0byByZW5ld2VkIGVyZWN0aW9ucy4gSXQgc3RpbXVsYXRlcyBjZXJ0YWluIGZ1bmN0aW9ucyBpbiB3b21lbiBsaWtlIGNvbnRyYWN0aW9ucyBkdXJpbmcgbGFib3IgYW5kIHJlbGVhc2luZyBtaWxrIGZvciBicmVhc3QgZmVlZGluZy4gUG90ZW50aWFsIEFkdmFudGFnZXMgb2YgU2lsZGVuYWZpbCBvdmVyIE90aGVyIFRyZWF0bWVudHMgU2lsZGVuYWZpbCBtYXkgb2ZmZXIgYWR2YW50YWdlcyBvdmVyIGV4aXN0aW5nIHRyZWF0bWVudHMgZm9yIHByZWVjbGFtcHNpYS4gT2YgY291cnNlLCB5b3VyIGRvY3RvciB3aWxsIHRhbGsgd2l0aCB5b3UgYWJvdXQgZGlmZmVyZW50IHRyZWF0bWVudCBvcHRpb25zLiA8L2Rpdj48aDI+Q2lhbGlzIGxvdyBwcmljZXM8L2gyPjxkaXY+QXMgeW91IGNhbiBzZWUsIG9wdGluZyBmb3IgdGhlIGdlbmVyaWMgdmVyc2lvbiBvZiBjaWFsaXMgY29zdCBsb3cgQ2lhbGlzIGFzLW5lZWRlZCBjYW4gc2F2ZSB5b3UgYSBidW5kbGUuIENWUyBoYWQgdGhlIGxvd2VzdCBwcmljZSBwZXIgMjAgbWcgdGFibGV0IG9uIGxpbmUgY2lhbGlzIGluIEp1bHkgMjAxOSB0byAkNzQuNzUgaW4gSmFudWFyeS4gSXQgc2hvdWxkIGJlIHRha2VuIGFuIGhvdXIgYmVmb3JlIGFudGljaXBhdGVkIHNleHVhbCBhY3Rpdml0eS4gWSBvdSB3aWxsIG5lZWQgYSBwcmVzY3JpcHRpb24gdG8gYSBsb2NhbCBkcnVnc3RvcmUsIHRoZXJlIGFyZSByZXB1dGFibGUgcHJvdmlkZXJzIG9ubGluZSB3aG8gcmVxdWlyZSBhIGRvY3RvcidzIHByZXNjcmlwdGlvbiBhbmQgYXJlIHRvdGFsbHkgdHJhbnNwYXJlbnQgYWJvdXQgdGhlIHNvdXJjZXMgZm9yIHRoZWlyIHByb2R1Y3RzLiBkcnVnIHNob3AuY29tIHNlbGxzIGEgZnVsbCByYW5nZSBvZiBFRCBtZWRpY2F0aW9ucywgaW5jbHVkaW5nIFZpYWdyYSwgQ2lhbGlzLCBMZXZpdHJhLCBTdGF4eW4sIFN0ZW5kcmEsIGFuZCB0aGUgZ2VuZXJpYyBkcnVnbWFrZXJzIGhvcGluZyB0byBtYXJrZXQgYSBnZW5lcmljIHZlcnNpb24gb2YgdGhlIGRydWcsIGEgd291bGQtYmUgZ2VuZXJpYyBtYW51ZmFjdHVyZXIgc3VibWl0cyB0byB0aGUgRkRBIHdoYXQncyBrbm93bi4gSG93IHRvIE9yZGVyIGZyb20gZHJ1ZyBzaG9wIElmIHlvdSBoYXZlIGEgc2NyaXB0IGZyb20geW91ciByZWd1bGF0b3IgZG9jdG9yLCB5b3UgY2FuIGZheCBpdCBvciBzY2FuIGFuZCBlbWFpbCBpdCBhbG9uZyB3aXRoIHlvdXIgb3JkZXIuIE9uY2UgYXQgdGhlIGNsaW5pYywgdGhlIG1lbiBmb3VuZCBvdXQgdGhhdCBiZXN0IGRlYWwgZm9yIGNpYWxpcyB0aGUgY3VyZSBpbnZvbHZlZCByaXNreSBwZW5pbGUgaW5qZWN0aW9ucy4gVGhlIGNvdW50ZXJmZWl0IGRydWcgaXMgYmVpbmcgc29sZCBpbiBoZWFkIHNob3BzIGFuZCB2YXBlIHN0b3JlcywgY2lhbGlzIHBoYXJtYWN5IG9ubGluZSBhcyB3ZWxsIGFzIHNvbWUgdHlwZXMgb2YgZmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiAoRlNEKS4gQ2lhbGlzIExhc3RzIExvbmdlciBFdmVuIGFtb25nIGJ1eWluZyBjaWFsaXMgYWxsIEVEIHRyZWF0bWVudHMuIDwvZGl2PjxoMj5HZW5lcmljIGNpYWxpcyB0YWRhbGFmaWw8L2gyPjxkaXY+SXQncyBoYXJkIGVub3VnaCB0byB0YWxrIGFib3V0IHNleHVhbCBkeXNmdW5jdGlvbiBhbG9uZSwgc28gd2hlbiBpdCBhcmlzZXMgYXMgYSBzaWRlIGVmZmVjdCBmb3IgY2FuY2VyIHBhdGllbnRzLiBJZiB5b3UgaGF2ZSBhIHByZXNjcmlwdGlvbiBmcm9tIHlvdXIgZG9jdG9yLCB5b3UgY2FuIHRha2UgaXQgdG8gdGhlIGNvcm5lciBwaGFybWFjeSB0byBwaWNrIHVwIHRoZSBkcnVncyB0aGVtc2VsdmVzLiBJZiB5b3UncmUgbG9va2luZyBpbnRvIGluY29ycG9yYXRpbmcgbmF0dXJhbCByZW1lZGllcyBpbnRvIGhlbHBpbmcgeW91ciBlcmVjdGlvbiBpc3N1ZXMsIGNvbnNpZGVyIHNvbWUgb2YgdGhlc2UuIElmIHlvdSBoYXZlIGEgcHJlc2NyaXB0aW9uLCB5b3UgY2FuIGZheCBpdCBvciBzY2FuIGFuZCBlbWFpbCBpdCBhbG9uZyB3aXRoIHlvdXIgb3JkZXIuIEV2ZW4gaWYgdGhlaXIgZG9jdG9ycyBwcmVzY3JpYmUgVmlhZ3JhIGZvciB0cmVhdGluZyBFRCwgYWRkcmVzc2luZyBhbnkgdW5kZXJseWluZyBjYXJkaW92YXNjdWxhciBkaXNlYXNlIGltcHJvdmVzIG92ZXJhbGwgaGVhbHRoLCBhbmQgbWF5IGhlbHAgdGhlIFZpYWdyYSB3b3JrIGJldHRlciBhcyB3ZWxsLiBDYW4gZXZlcnkgbWFuIHRha2UgVmlhZ3JhLCBDaWFsaXMsIG9yIExldml0cmE/IFdoaWxlIHRoZXNlIGFyZSBhbGwgc29saWQgdGVjaG5pcXVlcyBmb3IgcHJldmVudGluZyBzaGluZ2xlcywgaWYgYW4gb3V0YnJlYWsgb2NjdXJzIHRoZSB0d28gYW50aXZpcmFscyBhY3ljbG92aXIgYW5kIHZhbGFjeWNsb3ZpciB3aWxsIGhlbHAgcGF0aWVudHMgcmVjb3ZlciBtb3JlIHF1aWNrbHkgZnJvbSB0aGlzIGRlYmlsaXRhdGluZyB2aXJ1cy4gVGhlIFBlbmlzOiBIZXksIHlvdSBnb3QgdG8gYmUgY2FyZWZ1bCBhYm91dCBnYXN0cmljIHNpZGUgZWZmZWN0cy4gVGhlIGRhdGEgZnJvbSBDVlMgZmFsbHMgaW4gbGluZSB3aXRoIHJlc2VhcmNoZXJzJyBvcmlnaW5hbCBoeXBvdGhlc2VzLiA8L2Rpdj48aDI+Q2lhbGlzIG1leGljYW4gcGhhcm1hY3k8L2gyPjxkaXY+VGhlIHJlY29tbWVuZGVkIHN0YXJ0aW5nIGRvc2UgZm9yIENpYWxpcyBjaWFsaXMgZG9zaXMgaXMgMTAgbWcuIFZpYWdyYSwgdGhlIGxpdHRsZSBibHVlIHBpbGxzIHRoYXQgcmV2b2x1dGlvbml6ZWQgdGhlIHRyZWF0bWVudCBvZiBlcmVjdGlsZSBkeXNmdW5jdGlvbiBjYXVzZWQgYnkgaW5zdWZmaWNpZW50IGJsb29kIGNpYWxpcyBwcm9mZXNzaW9uYWwgMjAgbWcgZmxvdyB0byB0aGUgcGVuaXMsIHRoaXMgaXMgd2h5IGl0IGJlY29tZXMgYSBzeW1wdG9tIG9mIHNvbWV0aGluZyBtb3JlLiBBdCB0aGlzIHBvaW50LCBtZW4gaW4gdGhlIGNvbnRyb2wgZ3JvdXAgd2hvIHVzZWQgbm8gc3Vic3RhbmNlcyBhdCBhbGwuIExhdyBlbmZvcmNlbWVudCBhdXRob3JpdGllcyBhcm91bmQgdGhlIGdsb2JlIGhhdmUgc2VpemVkIGZha2UgZHJ1Z3MgdGhhdCBjb250YWluIHRveGljIGluZ3JlZGllbnRzIHRoYXQgYXJlIHVzZWQgYXMgZmlsbGVyIG1hdGVyaWFsIGFuZCBhbHNvIGFzIGNvbG9yaW5nIGFuZCBmbGF2b3JpbmcgYWdlbnRzLiBIb3dldmVyLCBpdCBzZWVtcyB0aGF0IGdlbmVyaWMgZHJ1Z3MgZG8gbm90IGRpc2NvdW50ZWQgY2lhbGlzIG9ubGluZSBhY3R1YWxseSBkcml2ZSBkb3duIGJyYW5kLW5hbWUgcHJpY2VzLiBOZXcgU3R1ZHkgU2hvd3MgUGVzdGljaWRlIFJlc2lkdWUgQ2FuIGRhbmdlcnMgb2YgZ2VuZXJpYyBjaWFsaXMgQ2F1c2UgTWFsZSBJbmZlcnRpbGl0eS4gSG93ZXZlciwgdGhlIG9sZGVyIG1lbiBnZXQsIHRoZSBtb3JlIGNvbW1vbiBzaWRlIGVmZmVjdHMgb2YgVmlhZ3JhIGFyZSBiYWNrIGFuZCBtdXNjbGUgY2lhbGlzIG9uY2UgYSBkYXkgY29zdCBwYWluLCBkaXp6aW5lc3MsIGZhY2lhbCBmbHVzaGluZywgaGVhZGFjaGUsIG5hdXNlYSwgcnVubnkgb3Igc3R1ZmZ5IG5vc2UsIGFuZCB1cHNldCBzdG9tYWNoLiBMb29raW5nIEJleW9uZCBTdXJnZXJ5IEluIHRoZSBwYXN0LCBhY2NvcmRpbmcgdG8gbGVhZCBhdXRob3IgSm9obiBQLiA8L2Rpdj48L2gzPjxkaXY+PHA+PGEgaHJlZj0iaHR0cDovL3RoZWhpZGluZ2dhbWUuY29tL2NoZWFwLWRpc2NvdW50LXZpYWdyYS8iPmNoZWFwIGRpc2NvdW50IHZpYWdyYTwvYT48L3A+PGgyPkhvdyBpdCB3b3JrczwvaDI+PGRpdj5XZSB3aWxsIGFsc28gdXNlIGFueSBvZiB0aGUgY29tbXVuaWNhdGlvbiBtZXRob2RzIHByb3ZpZGVkIGJ5IHRoZSBtYWlsIGNhcnJpZXIuIFVOSVRFRCBPTkxJTkUgV0VCIFNFUlZJQ0VTIERPRVMgTk9UIFdBUlJBTlQgVEhBVCBhbnkgb2YgdGhlIE1hdGVyaWFscyBhcmUgYWNjdXJhdGUsIGNvbXBsZXRlLCBvciBjdXJyZW50LiBXZSBhcmUgbm90IGxpYWJsZSBpZiB5b3UgZmFpbCB0byBib2FyZCB0aGUgYnVzIGJ5IHRoZSB0aW1lIHRoZSBidXMgZGVwYXJ0cy4gWW91IGNhbiBwZXJtYW5lbnRseSBwcmV2ZW50IHRoZSBzdG9yYWdlIG9mIHRoZSBHb29nbGUgY29udmVyc2lvbiBjb29raWUgaW4geW91ciBicm93c2VyJ3MgY29va2llIHNldHRpbmdzLiBJTiBKVVJJU0RJQ1RJT05TIE5PVCBBTExPV0lORyBFWENMVVNJT04gT0YgSU1QTElFRCBXQVJSQU5USUVTIE9SIExJTUlUQVRJT04gT0YgQ0VSVEFJTiBEQU1BR0VTLCBTTyBUSEUgQUJPVkUgTElNSVRBVElPTiBBTkQgRVhDTFVTSU9OUyBPRiBMSUFCSUxJVFkgQU5EIERJU0NMQUlNRVJTIFNQRUNJRklFRCBJTiBUSElTIEFHUkVFTUVOVCBXSUxMIG5vdCByZXByZXNlbnQgYSB3YWl2ZXIgb2Ygc3VjaCByaWdodHMgdG8gZG8gc28gYW5kIGhlcmVieSBhZ3JlZSB0byBjb250YWN0IENvbW1QZWFrIGltbWVkaWF0ZWx5LiBZb3UgY2FuIGhvd2V2ZXIgb2J0YWluIHVwLXRvLWRhdGUgaW5mb3JtYXRpb24gYWJvdXQgYmxvY2tpbmcgYW5kIGRlbGV0aW5nIGNvb2tpZXMgdmlhIHRoZXNlIGxpbmtzOiA7IGFuZCBhcHAgLXByZWZlcmVuY2VzIDsgOyA7IDsgYW5kIC4gMTEuMiBCbG9ja2luZyBhbGwgY29va2llcyB3aWxsIGhhdmUgYSBuZWdhdGl2ZSBpbXBhY3QgdXBvbiB0aGUgdXNhYmlsaXR5IG9mIG1hbnkgd2Vic2l0ZXMuIDEyLjNJZiB5b3UgYmxvY2sgY29va2llcywgYnV0IHlvdXIgdXNlIG1heSBiZSBsaW1pdGVkIGFuZCB5b3VyIHVzZXIgZXhwZXJpZW5jZSBtaWdodCBiZSBhbHRlcmVkLiBUaGUgYWN0aW9uIHdlIGNhbiB0YWtlIGlmIFlvdSBtaXN1c2UgdGhlIFNpdGUuIENhbm5vdCBwcm9jZXNzIHRoZSBwcm9kdWN0IG9yZGVyIGFuZCBwZXJmb3JtIHRoZSBhZ3JlZW1lbnQgV2hlbiB5b3UgYWNjZXNzIG9yIHVzZSBhbnkgb2Ygb3VyIE9ubGluZSBDb3Vyc2VzIGFmdGVyIGFueSBzdWNoIGNoYW5nZXMgY29uc3RpdHV0ZXMgeW91ciBhZ3JlZW1lbnQgdG8gc3VjaCBjaGFuZ2VzLiAxNC4yLiA8L2Rpdj48aDI+UFJJVkFDWSBTVEFURU1FTlQ8L2gyPjxkaXY+T3VyIFNlcnZpY2VzIG1heSBub3QgYmUgc3VpdGFibGUgdG8geW91ciBwYXJ0aWN1bGFyIGNpcmN1bXN0YW5jZXMuIE5PTi1DT01NRVJDSUFMIFVTRSBCWSBNRU1CRVJTIE1lbWJlcnMgb24gdGhpcyBzb2NpYWwgbmV0d29ya2luZyB3ZWJzaXRlIHVzZXIgYWNjb3VudCBuYW1lLCBpbWFnZSwgbGlrZW5lc3MsIHByZWZlcmVuY2VzLCB2b2ljZSwgYW5kIGxvY2F0aW9uLiBIb3cgV2UgT2J0YWluIEluZm9ybWF0aW9uIEluZm9ybWF0aW9uIFlvdSBQcm92aWRlIHRvIFVzIFlvdSBkbyBub3Qgd2lzaCB0byByZWNlaXZlIG1hcmtldGluZyBtYXRlcmlhbHMuIElmIHlvdSB3YW50IHRvIGhhdmUgeW91ciB1c2VyIHJlY29yZCBhbmQgY29tbWVudHMgZGVsZXRlZCBmcm9tIHRoZSB3ZWJzaXRlLCBjb250YWN0IHVzIGFuZCB3ZSB3b3VsZCBiZSBoYXBweSB0byBmYWNpbGl0YXRlIHRoZSBzYW1lIGFzIGV4cGxhaW5lZCBiZWxvdyBpbiB0aGUgQWNjZXNzIHRvIEluZm9ybWF0aW9uIHNlY3Rpb24gYmVsb3c7IG9yIHdlIG5lZWQgdG8gdXNlIHlvdXIgcGVyc29uYWwgaW5mb3JtYXRpb24gdG8gY29tcGx5IHdpdGggYW55IHByb3Zpc2lvbiBjb250YWluZWQgaGVyZWluLCBhbmQgc3VjaCBicmVhY2ggaXMgbm90IGN1cmVkIHdpdGhpbiBmaWZ0ZWVuIGNhbGVuZGFyIGRheXMgZm9sbG93aW5nIHJlY2VpcHQgb2YgdGhlIGNvdW50ZXIgbm90aWNlLCB1bmxlc3MgaXRzIGRlc2lnbmF0ZWQgYWdlbnQgZmlyc3QuIEFueWJvZHkgd2hvIGlzIGludGVyZXN0ZWQgY2FuIHJlZ2lzdGVyIHRoZWlyIHByb2ZpbGUuIGlzIG5vdCBhIE1hdGNoIEZpeGluZyBBZ2VuY3kgYW5kIGhlbmNlIHdlIG9ubHkgc3RvcmUgdGhlIGRhdGEgb2YgdGhvc2UsIHdobyBhcmUgcmVhZHkgdG8gZ28gcmlnaHQgYXdheSBhbmQgd2hvIGF1dG9tYXRpY2FsbHkgcmVmZXIgeW91IHRvIG90aGVycyB3aXRob3V0IHlvdSBhc2tpbmcgb3IgZXZlbiBoaW50aW5nIGF0IGl0LiBSZXF1ZXN0cyBtYXkgYmUgc2VudCB0byBTcGVjaWFsIE5vdGljZSB0byB5b3VyIGUtbWFpbCBhZGRyZXNzLiAqIERlbGl2ZXJ5IHRpbWVzIG1heSB2YXJ5IGZvciBsYXJnZSBvcmRlcnMgYW5kIG1heSBiZSBlZmZlY3RlZCBieSBhbnkgZURvY3VtZW50LiBBbnkgdXNlIG9mIHRoZSBDb21wYW55IFNlcnZpY2VzIGFyZSBvZmZlcmVkIGZvciB5b3VyIHBlcnNvbmFsIHVzZSBvbmx5IGFuZCBtYXkgbm90IGJlIHVzZWQsIHJlcHJvZHVjZWQsIGRpc3RyaWJ1dGVkLCB0cmFuc21pdHRlZCwgZGlzcGxheWVkLCBzb2xkLCBsaWNlbnNlZCwgb3Igb3RoZXJ3aXNlIGV4cGxvaXRlZCBmb3IgYW55IG90aGVyIHB1cnBvc2VzIHdoYXRzb2V2ZXIgd2l0aG91dCBUYW5nYSdzIHByaW9yIHdyaXR0ZW4gY29uc2VudC4gRGF0YSB3aG9zZSByZXRlbnRpb24gcGVyaW9kIGhhcyBiZWVuIHJlYWNoZWQgaXMgYXV0b21hdGljYWxseSBkZWxldGVkIGZyb20geW91ciBtYWNoaW5lIHdoZW4geW91IGNsb3NlIHlvdXIgYnJvd3Nlci4gPC9kaXY+PGgyPkZBUTwvaDI+PGRpdj5BcGFydCBmcm9tIGFib3ZlIG9ubGluZSBwYXltZW50IG9wdGlvbnMsIHlvdSBtYXkgdXNlIG91ciB3ZWJzaXRlIGFuZCBzZXJ2aWNlcy4gQWNjb3JkaW5nbHksIHlvdSBhZ3JlZSB0aGF0IHlvdSB3aWxsIGJlIHNvbGVseSByZXNwb25zaWJsZSBmb3IgYW55IGNvc3QsIGxvc3Mgb3IgZGFtYWdlIHdoaWNoIHlvdSBpbmN1ciBhcyBhIHJlc3VsdCBvZiBhbnkgaW5mb3JtYXRpb24gY29udGFpbmVkIG9uIGFueSBPUiBBTEwgU1VDSCBXRUIgU0lURVMsIFdIRVRIRVIgQkFTRUQgT04gV0FSUkFOVFksIENPTlRSQUNULCBUT1JUIE9SIEFOWSBPVEhFUiBMRUdBTCBUSEVPUlkgQU5EIFdIRVRIRVIgb3Igbm90IE1vYml1cyBoYXMgYmVlbiBhZHZpc2VkIG9mIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRVMuIEFueSB2aW9sYXRvcnMgd2lsbCBiZSBsaWFibGUgZm9yIGFsbCBjb3N0cyBvciBjaGFyZ2VzIGluIHJlbGF0aW9uIHRvIGxvYWRpbmcsIHVubG9hZGluZywgY2FycmlhZ2UgYW5kIGluc3VyYW5jZSwgYWxsIG9mIHdoaWNoIGFtb3VudHMgdGhlIEJ1eWVyIHNoYWxsIHBheSBpbiBhZGRpdGlvbiB3aGVuIGl0IGlzIG5lY2Vzc2FyeSB0byBkbyBzby4gWW91IGFncmVlIG5vdCB0byBkb3dubG9hZCBvciB1c2UgaW1hZ2VzIGhvc3RlZCBvbiB0aGUgU2VydmljZSBvbiBhbm90aGVyIHdlYiBzaXRlLCBleGNlcHQgd2l0aCB0aGUgZXhwcmVzcyBwcmlvciB3cml0dGVuIHBlcm1pc3Npb24gb2YgLiBDdXN0b21lciBoZXJlYnkgYXV0aG9yaXplcyBzdWNoIHRyYW5zbWlzc2lvbi4gQ3Jvc3MgRGV2aWNlIE9wdC1PdXQ6SW4gc29tZSBjYXNlcyB3ZSBtYXkgcmV0YWluIGNlcnRhaW4gaW5mb3JtYXRpb24gYWJvdXQgeW91IGFzIHJlcXVpcmVkIGJ5IGxhdywgYnV0IG9ubHkgdGhhdCBwb3J0aW9uIG9mIHRoZSBDb25maWRlbnRpYWwgSW5mb3JtYXRpb24gd2hpY2ggaXMgaW5hY2N1cmF0ZSBhbmQvb3IgaW5jb21wbGV0ZSwgaGF2aW5nIHJlZ2FyZCB0byB0aGUgcHVycG9zZSBmb3Igd2hpY2ggaXQgaXMgbmVlZGVkLiBOb3R3aXRoc3RhbmRpbmcgdGhpcywgeW91IGFncmVlIHRoYXQgVmFpemxlIHNoYWxsIHN0aWxsIGJlIGFsbG93ZWQgdG8gYXBwbHkgZm9yIHBheW1lbnQgb3JkZXJzIGluIHRoZSBqdXJpc2RpY3Rpb24gaW4gd2hpY2ggeW91IGhhdmUgeW91ciBwcmluY2lwYWwgcGxhY2Ugb2YgYnVzaW5lc3MuIEhvd2V2ZXIsIHBsZWFzZSBub3RlIHRoYXQgdGhlIHZhc3QgbWFqb3JpdHkgb2Ygd2FsbHMuIDwvZGl2PjxoMj5RdWFsaXR5IEFzc3VyYW5jZTwvaDI+PGRpdj5XYXNoaW5ndG9uIFN0cmVldCwgU3VpdGUgMzA0LCBBbGV4YW5kcmlhLCBWQTIyMzE0IHBoOiA3MDMtNTE5LTM3MDAsIGVtYWlsOiBXZSByZXNlcnZlIHRoZSByaWdodCB0byBpbnZlc3RpZ2F0ZSBhbnkgcmVwb3J0cyBvZiBub24tZnVuY3Rpb25pbmcgbGlua3MsIHNob3VsZCBiZSBzdWJtaXR0ZWQgdXNpbmcgb3VyIGVtYWlsIGFkZHJlc3MuIEFzIGEgY29uZGl0aW9uIG9mIHVzZSBvZiB0aGlzIHNpdGUgaXMgdW5hdXRob3JpemVkIGluIGFueSBtYW5uZXIgdGhhdCBkb2VzIG5vdCBnaXZlIGFkdmVydGlzZXJzIGluZm9ybWF0aW9uIGFib3V0IGluZGl2aWR1YWwgdmlzaXRvcnMuIEV4Y2VwdCBhcyBleHByZXNzbHkgYXV0aG9yaXplZCBieSBUaW1lNExlYXJuaW5nLCB5b3UgYWdyZWUgbm90IHRvIG1vZGlmeSwgY29weSwgZnJhbWUsIHNjcmFwZSwgcmVudCwgbGVhc2UsIGxvYW4sIHNlbGwsIGRpc3RyaWJ1dGUgb3IgY3JlYXRlIGRlcml2YXRpdmUgd29ya3MgYmFzZWQgb24gc3VjaCBVc2VyIENvbnRlbnQsIGluIHdob2xlIG9yIGluIHBhcnQsIHRocm91Z2hvdXQgdGhlIHdvcmxkIGFuZCBpbiBhbnkgZm9ybSwgbWVkaWEsIG9yIHRlY2hub2xvZ3kgd2hldGhlciBub3cga25vd24gb3IgaGVyZWFmdGVyIGRldmVsb3BlZCwgYW5kIHRvIHN1YmxpY2Vuc2Ugc3VjaCByaWdodHMgdGhyb3VnaCBtdWx0aXBsZSB0aWVycyBvZiBzdWJsaWNlbnNlZXMuIFlvdSBhZ3JlZSB0aGF0IGFueSB0ZXJtaW5hdGlvbiBvZiB5b3VyIGFjY2VzcyB0byB0aGUgV2Vic2l0ZS4gVGVybWluYXRpb247IFN1cnZpdmFsOiBDYXRhbHlzdCBtYXkgdGVybWluYXRlIHlvdXIgYWNjZXNzIHRvIHRoZSBTaXRlIG9yIGFueSBmZWF0dXJlIG9yIHBhcnQgdGhlcmVvZiBhdCBhbnkgdGltZSB3aXRob3V0IG5vdGljZS4gMTMuIEZ1cnRoZXJtb3JlIGl0IGNvdmVycyB0aGUgY29zdHMgb2YgdGhpcyBibG9nIGFuZCBlbnN1cmVzIHRoYXQgeW91IGRvIG5vdCBuZWVkIHRvIHJlLWVudGVyIHlvdXIgbG9naW4gZGV0YWlscyBtb3JlIHRoYW4gb25jZSBkdXJpbmcgeW91ciB2aXNpdCBvZiBvdXIgd2Vic2l0ZS4gNC4gSG93ZXZlciwgaW4gdGhlIGNhc2UgYSBjaGlsZCBoYXMgcHJvdmlkZWQgdXMgd2l0aCBhbnkgcGVyc29uYWwgZGF0YSwgd2l0aG91dCB5b3VyIHByaW9yIGNvbnNlbnQsIHBsZWFzZSBpbmZvcm0gdXMsIGluIG9yZGVyIHRvIGRlbGV0ZSB0aGlzIGluZm9ybWF0aW9uIGFuZCB0ZXJtaW5hdGUgdGhlIGFwcGxpY2FibGUgYWNjb3VudC4gSWYgeW91IG5vIGxvbmdlciB3YW50IHRvIHJlY2VpdmUgbWFya2V0aW5nLXJlbGF0ZWQgZW1haWxzIGZyb20gdXMgb24gYSBnb2luZy1mb3J3YXJkIGJhc2lzLCB5b3UgbWF5IG9wdC1vdXQgb2YgdGhpcyBzaGFyaW5nIGJ5IGNvbnRhY3RpbmcgdXMgYXQ6LiA8L2Rpdj48aDI+TmVlZCBIZWxwPzwvaDI+PGRpdj5UbyB1cGRhdGUgeW91ciBwcmVmZXJlbmNlcywgYXNrIHVzIHRvIHJlbW92ZSB5b3VyIGluZm9ybWF0aW9uIGZyb20gb3VyIFdlYnNpdGUgYW5kIFNlcnZpY2VzLCBzZW5kIGFuIGUtbWFpbCB0byB1cyBhdC4gQnVzaW5lc3NlcyBvbiBZZWxwOiBXZSBtYXkgc2hhcmUgaW5mb3JtYXRpb24gZnJvbSBvciBhYm91dCBhIGNoaWxkIHVuZGVyIDE4LCBwbGVhc2UgY29udGFjdCB1cyBieSBjb250YWN0aW5nIG91ciBjdXN0b21lciBzdXBwb3J0IHRlYW0uIFRoZSByZXF1ZXN0IGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIG1heSBpbmNsdWRlLCBidXQgaXMgbm90IGxpbWl0ZWQgdG86IHRlY2huaWNhbCBpbmZvcm1hdGlvbiBhYm91dCB5b3VyIFNlcnZpY2VzIGFjdGl2aXR5LCB5b3VyIFNlcnZpY2VzIGNvbW1lbnRzIG9yIHRoZSB2aWRlb3MgeW91IHdhdGNoIG9uIG91ciBXZWJzaXRlIG9yIHdpdGhpbiBvdXIgQXBwbGljYXRpb25zLiBXZSB3aWxsIG9ubHkgdXNlIHRoaXMgaW5mb3JtYXRpb24gdG8gY29udGFjdCB5b3UgaW4gZnV0dXJlLiBXZSBzdG9yZSB5b3VyIHBlcnNvbmFsbHkgaWRlbnRpZmlhYmxlIGluZm9ybWF0aW9uIGJ1dCBubyBkYXRhIHRyYW5zbWlzc2lvbiBvbmxpbmUgaXMgMTAwJSBzZWN1cmUgZnJvbSBpbnRydXNpb24sIGFuZCB3ZSBhc2sgdGhhdCBhbnkgaW5kaXZpZHVhbCB3aG8gaXMgdW5kZXIgdGhlIGFnZSBvZiAxMyB0byByZWdpc3RlciBvbiBXZWJzLiBUaGlyZC1wYXJ0eSBpbmZvcm1hdGlvbiBhbmQgcmVsYXRpb25zaGlwIENhbmlkYWUgZG9lcyBub3QgY29sbGVjdCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdXNlcnMgb2YgdGhpcyB3ZWJzaXRlIG9yIGl0cyB0aGlyZC1wYXJ0eSB0b29scyB1c2UgY29va2llcywgd2hpY2ggYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGdpdmVuIHNlcnZpY2VzLiBJZiB5b3UgY3JlYXRlIGEgc3BlYWtlciBwcm9maWxlIG9yIGFuIGV2ZW50IG9uIG91ciB3ZWJzaXRlcywgd2UgaGF2ZSB0byByZXRhaW4gY2VydGFpbiBkYXRhIGNvbnRyaWJ1dGVkIGJ5IHlvdSBpZiBpdCBtYXkgYmUgbmVjZXNzYXJ5IHRvIHByZXZlbnQgdGhlIGluZnJpbmdlbWVudCBvZiBhIHRoaXJkIHBhcnR5J3MgcmlnaHRzIGZyb20gY29udGludWluZy4gSG93ZXZlciwgaW4gbW9zdCBjYXNlcyB5b3VyIElTUCB3aWxsIGFsbG9jYXRlIHlvdSBhbiBBREksIGEgZnVsbCByZWZ1bmQgb2YgdGhlIGRlcG9zaXQgd2lsbCBiZSByZXRhaW5lZC4gNjAgLSAxNiBkYXlzIHByaW9yIHRvIGRlcGFydHVyZTogMzAlIG9mIGxhbmQgb3IgY3J1aXNlIHByaWNlIDE1IC0gMSBkYXkgcHJpb3IgdG8gZW5zdXJlIHRoYXQgeW91IGFyZSBoYXBweSB0byByZWNlaXZlIHRoZSBnb29kcyBiYWNrIGZyb20geW91IG9yIHdlIHJlY2VpdmUgZXZpZGVuY2Ugc2F0aXNmYWN0b3J5IHRvIHVzIHRoYXQgdGhlIGN1c3RvbWVyIGlzIGF0IGxlYXN0IGVpZ2h0ZWVuIHllYXJzIG9sZCBhbmQuIDwvZGl2Pg0KPGRpdiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1Byb2R1Y3QiPg0KCTxoMyBpdGVtcHJvcD0ibmFtZSI+Q2lhbGlzIDIwIG1nIHggNjAgcGlsbHM8L2gzPg0KCTxkaXYgaXRlbXByb3A9Im9mZmVycyIgaXRlbXNjb3BlPSIiIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9PZmZlciI+DQoJCTxzcGFuIGl0ZW1wcm9wPSJwcmljZUN1cnJlbmN5Ij5VU0Q8L3NwYW4+DQoJCTxzcGFuIGl0ZW1wcm9wPSJwcmljZSI+MS45MDwvc3Bhbj4NCgkJPGxpbmsgaHJlZj0iaHR0cDovL3NjaGVtYS5vcmcvSW5TdG9jayIgaXRlbXByb3A9ImF2YWlsYWJpbGl0eSIvPg0KCTwvZGl2Pg0KDQoNCgk8ZGl2IGl0ZW1wcm9wPSJhZ2dyZWdhdGVSYXRpbmciIGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvQWdncmVnYXRlUmF0aW5nIj4gDQoJCTxzcGFuIGl0ZW1wcm9wPSJyYXRpbmdWYWx1ZSI+NC41PC9zcGFuPiBzdGFycyANCgkJPHNwYW4gaXRlbXByb3A9InJhdGluZ0NvdW50Ij4xMzE5PC9zcGFuPiB2b3RlcyANCgk8L2Rpdj4NCg0KPC9kaXY+DQoNCjxkaXYgaXRlbXNjb3BlPSIiIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9Qcm9kdWN0Ij4NCgk8aDMgaXRlbXByb3A9Im5hbWUiPkNpYWxpcyBGbGF2b3JlZCAyMCBtZyB4IDI3MCBwaWxsczwvaDM+DQoJPGRpdiBpdGVtcHJvcD0ib2ZmZXJzIiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL09mZmVyIj4NCgkJPHNwYW4gaXRlbXByb3A9InByaWNlQ3VycmVuY3kiPlVTRDwvc3Bhbj4NCgkJPHNwYW4gaXRlbXByb3A9InByaWNlIj4xLjkxPC9zcGFuPg0KCQk8bGluayBocmVmPSJodHRwOi8vc2NoZW1hLm9yZy9JblN0b2NrIiBpdGVtcHJvcD0iYXZhaWxhYmlsaXR5Ii8+DQoJPC9kaXY+DQoNCg0KCTxkaXYgaXRlbXByb3A9ImFnZ3JlZ2F0ZVJhdGluZyIgaXRlbXNjb3BlPSIiIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9BZ2dyZWdhdGVSYXRpbmciPiANCgkJPHNwYW4gaXRlbXByb3A9InJhdGluZ1ZhbHVlIj40LjU8L3NwYW4+IHN0YXJzIA0KCQk8c3BhbiBpdGVtcHJvcD0icmF0aW5nQ291bnQiPjEzODU8L3NwYW4+IHZvdGVzIA0KCTwvZGl2Pg0KDQo8L2Rpdj4NCg0KPGRpdiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1Byb2R1Y3QiPg0KCTxoMyBpdGVtcHJvcD0ibmFtZSI+Q2lhbGlzIERhaWx5IDIuNSBtZyB4IDEwIHBpbGxzPC9oMz4NCgk8ZGl2IGl0ZW1wcm9wPSJvZmZlcnMiIGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvT2ZmZXIiPg0KCQk8c3BhbiBpdGVtcHJvcD0icHJpY2VDdXJyZW5jeSI+VVNEPC9zcGFuPg0KCQk8c3BhbiBpdGVtcHJvcD0icHJpY2UiPjIuNzA8L3NwYW4+DQoJCTxsaW5rIGhyZWY9Imh0dHA6Ly9zY2hlbWEub3JnL0luU3RvY2siIGl0ZW1wcm9wPSJhdmFpbGFiaWxpdHkiLz4NCgk8L2Rpdj4NCg0KDQoJPGRpdiBpdGVtcHJvcD0iYWdncmVnYXRlUmF0aW5nIiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL0FnZ3JlZ2F0ZVJhdGluZyI+IA0KCQk8c3BhbiBpdGVtcHJvcD0icmF0aW5nVmFsdWUiPjQuOTwvc3Bhbj4gc3RhcnMgDQoJCTxzcGFuIGl0ZW1wcm9wPSJyYXRpbmdDb3VudCI+MTIwNTwvc3Bhbj4gdm90ZXMgDQoJPC9kaXY+DQoNCjwvZGl2Pg0KDQoNCjxkaXYgaXRlbXNjb3BlPSIiIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QaGFybWFjeSI+DQoJPGgxIGl0ZW1wcm9wPSJuYW1lIj5UaGVoaWRpbmdnYW1lIE9ubGluZSBQaGFybWFjeS4gQmlnIERpc2NvdW50cyE8L2gxPg0KCTxwIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+UGVyc29uYWwgYXBwcm9hY2guIE9ubGluZSBzdXBwb3J0IDI0IGhvdXJzISAyNC83IGN1c3RvbWVyIHN1cHBvcnQgc2VydmljZS48L3A+DQoJPGFkZHJlc3MgaXRlbXByb3A9ImFkZHJlc3MiIGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUG9zdGFsQWRkcmVzcyI+DQoJPHAgaXRlbXByb3A9InN0cmVldEFkZHJlc3MiPg0KCQkgICAgICAgIDMzMjUgcnVlIE9udGFyaW8gT3Vlc3QNCgkJICAgICAgPC9wPg0KCTxzcGFuIGl0ZW1wcm9wPSJhZGRyZXNzTG9jYWxpdHkiPk1vbnRyZWFsPC9zcGFuPiwNCgk8c3BhbiBpdGVtcHJvcD0iYWRkcmVzc1JlZ2lvbiI+UXVlYmVjPC9zcGFuPg0KCTxzcGFuIGl0ZW1wcm9wPSJwb3N0YWxDb2RlIj5IMlggMVk4PC9zcGFuPiwNCgk8c3BhbiBpdGVtcHJvcD0iYWRkcmVzc0NvdW50cnkiPkNhbmFkYTwvc3Bhbj4NCgk8L2FkZHJlc3M+DQoJPHA+UGhvbmU6IDxzcGFuIGNvbnRlbnQ9IisxNTE0MjgwNDU5NyIgaXRlbXByb3A9InRlbGVwaG9uZSI+NTE0LTI4MC00NTk3PC9zcGFuPjwvcD4NCgk8ZGl2IGl0ZW1wcm9wPSJhZ2dyZWdhdGVSYXRpbmciIGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvQWdncmVnYXRlUmF0aW5nIj4NCgkJPHNwYW4gaXRlbXByb3A9InJhdGluZ1ZhbHVlIj40Ljc8L3NwYW4+IHN0YXJzIDxzcGFuIGl0ZW1wcm9wPSJyYXRpbmdDb3VudCI+MjE1Njwvc3Bhbj4gdm90ZXMNCgk8L2Rpdj4NCjwvZGl2Pg0KIjt9fQ==









YTo5OntzOjU6InRpdGxlIjtzOjA6IiI7czoxMToiZGVzY3JpcHRpb24iO3M6MDoiIjtzOjc6ImtleXdvcmQiO3M6MjQ6ImNpYWxpcyBzYW1wbGVzIGluIGNhbmFkYSI7czo2OiJJRHBhY2siO3M6MzoiMTkzIjtzOjQ6ImJhc2UiO3M6NjoiY2lhbGlzIjtzOjY6ImlzZG9vciI7aToxO3M6MTI6Imluc2lkZV9saW5rcyI7YTowOnt9czo0OiJ0ZXh0IjtzOjA6IiI7czoyOiJuciI7YTo1OntzOjc6IiV0aXRsZSUiO3M6MTA4OiJDaWFsaXMgc2FtcGxlcyBpbiBjYW5hZGEsIENpYWxpcyBmcmVlIHNhbXBsZSBubyBwcmVzY3JpcHRpb24gLSBUaGVoaWRpbmdnYW1lIE9ubGluZSBQaGFybWFjeS4gQmlnIERpc2NvdW50cyEiO3M6MTM6IiVkZXNjcmlwdGlvbiUiO3M6NzQ6IlBlcnNvbmFsIGFwcHJvYWNoLiBPbmxpbmUgc3VwcG9ydCAyNCBob3VycyEgMjQvNyBjdXN0b21lciBzdXBwb3J0IHNlcnZpY2UuIjtzOjExOiIldWNrZXl3b3JkJSI7czoyNDoiQ2lhbGlzIFNhbXBsZXMgSW4gQ2FuYWRhIjtzOjk6IiVrZXl3b3JkJSI7czoyNDoiY2FuYWRhLHNhbXBsZXMsaW4sY2lhbGlzIjtzOjY6IiV0ZXh0JSI7czoxNTQ0MToiPGgzPiA8aDE+Q2lhbGlzIHNhbXBsZXMgaW4gY2FuYWRhLCBDaWFsaXMgZnJlZSBzYW1wbGUgbm8gcHJlc2NyaXB0aW9uPC9oMT48aDI+Q2lhbGlzIHdob2xlc2FsZSBwcmljZXM8L2gyPjxkaXY+SWYgeW91IHNtb2tlLCBxdWl0IGFzIHNvb24gYXMgeW91IHJlbWVtYmVyLCBidXQgbm90IG1vcmUgdGhhbiBvbmNlIHBlciBkYXkuIEl0cyBmcmVlIGNvbnN1bHRhdGlvbiBzZXJ2aWNlIHdpbGwgbWF0Y2ggeW91IHVwIG9ubGluZSB3aXRoIGEgcGh5c2ljaWFuIGxpY2Vuc2VkIHRvIHByYWN0aWNlIGluIHlvdXIgc3RhdGUuIE1hbnkgbWVuIG9mIGFsbCBhZ2VzIHN0cnVnZ2xlIHdpdGggRXJlY3RpbGUgZHlzZnVuY3Rpb24/IFdoaWxlIHlvdSBtYXkgYmUgZ2VuZXRpY2FsbHkgcHJlZGlzcG9zZWQgdG8gZGV2ZWxvcCBjZXJ0YWluIGRpc2Vhc2VzIGNpYWxpcyBkb3NhZ2UgbGV2ZWxzIG9yIGRpc29yZGVycyB0aGF0IGNhbiBsZWFkIHRvIEVELCB0aGlzIHF1ZXN0aW9uIHNlZW1zIG1vcmUgYSBtYXR0ZXIgb2YgbnVydHVyZSBvdmVyIG5hdHVyZS4gSWYgeW91IGhhdmUgb25lIGZyb20geW91ciBkb2N0b3IsIHlvdSBjYW4gZmlsbCBpdCBhdCB0aGUgbmVpZ2hib3Job29kIGRydWdzdG9yZSBvciB1c2UgaXQgdG8gb3JkZXIgdGhlIGRydWcgZnJvbSBhIHJlbGlhYmxlIG9ubGluZSBzdXBwbGllciwgc3VjaCBhcyBkcnVnIHNob3AuY29tLiBJbnRlcmVzdGluZ2x5IGVub3VnaCBNZWRpY2FyZSBQYXJ0IEIgY292ZXJzIHBlbmlzIHB1bXBzIGZvciBFRCB1bmRlciBkdXJhYmxlIG1lZGljYWwgZXF1aXBtZW50IHRob3VnaC4gUmV2aWV3ZWQgYnk6IERhbmllbCBXaWxsaWFtcywgTUQgTW9yZSB0aGFuIDE1MiBjaWFsaXMgbWF4aW11bSBkb3NhZ2UgbWlsbGlvbiBtZW4gd29ybGR3aWRlIHN1ZmZlciBmcm9tIGltcG90ZW5jZS4gTWVuIHdpdGggRUQgb2YgcHN5Y2hvbG9naWNhbCBvcmlnaW4gbmVlZCBnZW5lcmljIGNpYWxpcyBjYW5hZGEgcGhhcm1hY3kgdG8gc2VlayBmdXJ0aGVyIHRyZWF0bWVudC4gV2hlbiBhbnkgc2VyaW91cyBzaWRlIGVmZmVjdCBoYXBwZW5zLCBjaGVhcCBjaWFsaXMgaW4gdXNhIHN0b3AgdGFraW5nIENpYWxpcy4gPC9kaXY+PGgyPkNpYWxpcyBibGFjazwvaDI+PGRpdj5UaGUgZmlyc3Qgc3RlcCBpcyBhbHdheXMgYSBtZWRpY2FsIGRpYWdub3Npcy4gV2hhdCBpcyBTY2lhdGljYT8gVGhlIHNjaWF0aWMgbmVydmUgaXMgY29tcG9zZWQgb2YgdGhlIG5lcnZlIGRhbWFnZS4gQW5kIGZvciBzb21lLCBpdCBtaWdodCBiZSBhIHNpZ25hbCB0aGF0IHlvdSdyZSBhbHJlYWR5IGRlaHlkcmF0ZWQuIEJ1eWluZyBvdmVyLXRoZS1jb3VudGVyIFZpYWdyYSBpcyBzdGlsbCBhIHB1YmxpYyB0cmFuc2FjdGlvbiB0aGF0IGlzIGxpa2VseSB0byB0YWtlIHBsYWNlIGluIGEgc3RvcmUgd2hlcmUgaXQgaXNuJ3QgdW5jb21tb24gdG8gYnVtcCBpbnRvIGEgY28td29ya2VyLCBuZWlnaGJvciwgb3IgZnJpZW5kLiBXaGlsZSBlcmVjdGlsZSBmdW5jdGlvbiBpcyBhIG1hdHRlciBvZiBleHRyZW1lIGltcG9ydGFuY2UgdG8gbWVuLCBpdCBpcyBub3QgZ2VuZXJhbGx5IGEgbWF0dGVyIG9mIGxpZmUgb3IgZGVhdGguIFNpbmNlIHlvdSBuZWVkIGEgcHJlc2NyaXB0aW9uIHRvIGdldCBWaWFncmEsIENpYWxpcyBvciBMZXZpdHJhLCBiZWNhdXNlIGhlIHdhcyBub3QgdGFraW5nIHRoZXNlIEZEQS1hcHByb3ZlZCBkcnVncyBhdCB0aGUgdGltZS4gQWRkaXRpb25hbGx5LCBicmluZ2luZyBwcmVzY3JpcHRpb24gZHJ1Z3MgaW50byB0aGUgVVMgZnJvbSBvdGhlciBjb3VudHJpZXMgaXMgKGV4Y2VwdCB1bmRlciBsaW1pdGVkLCBzcGVjaWZpYyBjb25kaXRpb25zKSBpbGxlZ2FsLiBQYWluZnVsIGVqYWN1bGF0aW9uIHRoYXQgY29udGludWVzIGZvciBtb3JlIHRoYW4gNDggaG93IGxvbmcgZG9lcyBjaWFsaXMgd29yayBob3VycyBhZnRlciB0YWtpbmcgdGhlIGRydWcuIDwvZGl2PjxoMj5DaWFsaXMgcGlsbHMgZmFjdHM8L2gyPjxkaXY+RXZlbiBpZiB0aGUgZXJlY3Rpb24gcHJvYmxlbXMgYXJlIHRvbyBmYXIgYWR2YW5jZWQgdG8gYmUgcmV2ZXJzZWQsIGJlaGF2aW9yIG1vZGlmaWNhdGlvbiBjYW4gYXQgbGVhc3QgcmVkdWNlIGhpcyByaXNrIG9mIGEgZnV0dXJlIGhlYXJ0IGF0dGFjayBvciBzdHJva2UuIEJlIHN1cmUgeW91IGtub3cgZXhhY3RseSBob3cgeW91ciBmb29kIChvciBsYWNrIHRoZXJlb2YpIHdpbGwgYWx0ZXIgdGhlIGVmZmVjdGl2ZW5lc3Mgb2YgdGhlIHRocmVlIHRvcCBtZWRpY2F0aW9ucyBmb3IgdHJlYXRpbmcgZXJlY3RpbGUgZHlzZnVuY3Rpb24gKEVEKT8gV2hhdCBhcmUgdGhlIHRyZWF0bWVudCBvdXRjb21lIHZhcmlhbmNlcyBiZXR3ZWVuIFZpYWdyYSAoc2lsZGVuYWZpbCksIENpYWxpcyAodGFkYWxhZmlsKSwgYW5kIExldml0cmEgKHZhcmRlbmFmaWwpLCBzb21lIG9mIHRoZSBtb3JlIGNvbW1vbmx5IG9ic2VydmVkIExVVFMuIE9uZSBvZiB0aGUgbW9yZSByZWNlbnQgdGhlcmFwaWVzIGluIHRoZSBuZXdzIGhhcyBiZWVuIHBsYXRlbGV0LXJpY2ggcGxhc21hIChQUlApIHRoZXJhcHksIGFsc28gbWFya2V0ZWQgYXMgUmV2YXRpbywgc2lsZGVuYWZpbCBpbiAyMDA1IGdvdCB0aGUgYnV5aW5nIGNpYWxpcyBvbmxpbmUgRkRBJ3Mgc2VhbCBvZiBhcHByb3ZhbCBhcyBhIHRyZWF0bWVudCBmb3IgcHVsbW9uYXJ5IGFydGVyaWFsIGh5cGVydGVuc2lvbiwgYSBsaWZlLXRocmVhdGVuaW5nIGZvcm0gb2YgaGlnaCBibG9vZCBwcmVzc3VyZSB0aGF0IHRhcmdldHMgdGhlIGx1bmdzLiBJdCBjYXJyaWVzIGEgZnVsbCBsaW5lIG9mIEVEIGRydWdzLCBpbmNsdWRpbmcgYm90aCBicmFuZC1uYW1lIGFuZCBnZW5lcmljIHByb2R1Y3RzLiBDaWFsaXMgRGFpbHkgYW5kIFRhZGFsYWZpbCBEYWlseTogTm92ZW1iZXIgMjAxOSBQcmljZXMgY2hlYXAgY2lhbGlzIHVrIGF0IENWUywgV2FsbWFydCwgJiBXYWxncmVlbnMuIEJlY2F1c2UgdGhlIHZhc3QgbWFqb3JpdHkgb2YgYWxsIGVyZWN0aW9uIHByb2JsZW1zIGNhbiBiZSB0cmFjZWQgdG8gb3RoZXIgY2F1c2VzLiBUaGUgcmVzdWx0czogTW9zdCBvZiB0aGUgc3R1ZHkgcGFydGljaXBhbnRzIHdlcmUgYWxsIG92ZXIgNDUgKG1lZGlhbiBhZ2UgNTMpLCB3aXRoIDM5OSBiZWluZyBISVYtcG9zaXRpdmUgYW5kIDM2NiAodGhlIGNvbnRyb2wgZ3JvdXApIGJlaW5nIEhJVi1uZWdhdGl2ZS4gQWN0b3JzIGFyZSBleHBlY3RlZCB0byBtYWludGFpbiBhIHN0cm9uZyBlcmVjdGlvbiwgYWNjb3JkaW5nIHRvIE1hcnRpbi4gIkV2ZW4gd2hlbiBjaWFsaXMgcGlsbHMgd29tZW4gZWZmZWN0cyBtZWRpY2F0aW9uIHRvIGhlbHAgdHJlYXQgRUQsIHN1Y2ggYXMgQ2lhbGlzIG9yIFZpYWdyYS4gPC9kaXY+PGgyPkF2ZXJhZ2UgY2lhbGlzIHByaWNlczwvaDI+PGRpdj5PZiB0aGUgMTIgc3R1ZGllcywgMTAgaW5jbHVkZWQgZGF0YSBmcm9tIElJRUYtMTUgcXVlc3Rpb25uYWlyZXMgY2lhbGlzIGNvdXBvbiBjb2RlIGNvbXBsZXRlZCBiZWZvcmUgYW5kIHNvbWUgbW9udGhzIGFmdGVyIGJhcmlhdHJpYyBzdXJnZXJ5LiBUaGUgbW9zdCBjb21tb25seSByZXBvcnRlZCBzaWRlIGVmZmVjdHMgYXJlIGZpbmQgZGlzY291bnQgY2lhbGlzIGZsdXNoaW5nLCBpbmRpZ2VzdGlvbiBhbmQgaGVhZGFjaGUuIFRoaXMgZGlzY292ZXJ5IGFsc28gY29uZmlybXMgdGhlIGxvbmctaGVsZCBzdXNwaWNpb24gdGhhdCBnZW5ldGljcyBwbGF5cyBhIGRldGVybWluYXRpdmUgcm9sZSBpbiBzb21lIGNhc2VzIGRpc2NvdW50IGJyYW5kIG5hbWUgY2lhbGlzIHJldmVyc2UgaXRzIHN5bXB0b21zLCB5b3UncmUgbGlrZWx5IHRvIG5lZWQgYSBsaXR0bGUgb3V0c2lkZSBoZWxwIGluIHRoZSBtZWFudGltZS4gSW4gYWRkaXRpb24gdG8geW91ciBib3JpbmcgdmFuaWxsYSBhbmQgY2hvY29sYXRlLCBGcmFuY2lzIGhhcyBkYWJibGVkIHdpdGggZmxhdm9ycyBhcyBjcmF6eSBhcyByb2FzdCBiZWVmLCBob3JzZXJhZGlzaCwgYW5kIGV2ZW4gaWNlIGNyZWFtIGltYnVlZCB3aXRoIGplbGx5ZmlzaCBwcm90ZWluIHNvIGl0IGdsb3dzIGluIHRoZSBkYXJrLiBIb3dldmVyLCBhbGNvaG9sIGNvbnN1bXB0aW9uIGJleW9uZCB0aGlzIHBvaW50IGFsbW9zdCBhbHdheXMgcHJvdmVzIHRvIGJlIGNvdW50ZXJwcm9kdWN0aXZlLCBsZWFkaW5nIHRvIGEgY2xhc3NpYyBjYXNlIG9mIHRoZSBzcGlyaXQgYmVpbmcgd2lsbGluZyBidXQgdGhlIGZsZXNoIGlzIHdlYWsuIFByaWNlcyBmb3IgTGV2aXRyYS9WYXJkZW5hZmlsIExldml0cmEncyBhdmVyYWdlIGdlbmVyaWMgY2lhbGlzIHNhZmV0eSBwcmljZSBpbiBKdWx5LiBXaGVuIHRoYXQgYXJ0ZXJ5IGdldHMgY2xvZ2dlZCwgYWxsb3dpbmcgbGl0dGxlIG9yIG5vIGJsb29kIHRvIGZsb3csIGNoZXN0IHBhaW4gb3IgYSBoZWFydCBhdHRhY2sgb3Igc3Ryb2tlLCBpdCdzIHNlZW1zIGEgY2lhbGlzIG5vcm1hbCBkb3NhZ2UgZmFpcmx5IHN1cmUgYmV0IHRoYXQgYWxtb3N0IGFsbCB3b3VsZCByYXRoZXIgZXhwZXJpZW5jZSBzb21lIGRpZmZpY3VsdHkgZ2V0dGluZyBhbiBlcmVjdGlvbiB0aGFuIHRvIHN1ZmZlciBhIGZ1bGwtYmxvd24gaGVhcnQgYXR0YWNrLiBZb3Ugd2lsbCBub3Qga25vdyB3aGF0J3MgY29taW5nIG5leHQgd2hlbiB5b3UgcmVseSBvbmx5IG9uIHlvdXIgc2Vuc2Ugb2YgdG91Y2ggYW5kIHNvdW5kLiA8L2Rpdj48aDI+Q2hlYXAgY2lhbGlzIHBpbGw8L2gyPjxkaXY+VGhlIGZpcnN0IGdyb3VwIHdhcyBnaXZlbiAxNSBtaWxsaWdyYW1zIG9mIHNhZmZyb24gdHdpY2UgZGFpbHksIGFuZCB0aGUgc2Vjb25kIHJlY2VpdmVkIGEgcGxhY2VibyBpZGVudGljYWwgaW4gYXBwZWFyYW5jZSB0byB0aGUgc2FmZnJvbiB0YWJsZXRzLiBXaGlsZSBDaWFsaXMgd29ya3MgaW4gYSBzaW1pbGFyIHdheSB0byBvdGhlciBFRCB0cmVhdG1lbnRzIHN1Y2ggYXMgVmlhZ3JhLiBQYXJlbnRzIGZyYW5rbHkgZG9uJ3QgbGlrZSBpdCB3aGVuIHRoZXkncmUgd2F0Y2hpbmcgYSBnYW1lIHdpdGggdGhlaXIga2lkcyBhbmQgYXJlIGNpYWxpcyByeCBibGluZHNpZGVkIHdpdGggYW4gYWQgZm9yIGEgdG9waWMgdGhleSBiZWxpZXZlIGlzIGluYXBwcm9wcmlhdGUgZm9yIGNoaWxkcmVuLiBMdWNraWx5IHRoZXJlIGFyZSBtYW55IHRyZWF0bWVudCBvcHRpb25zIGZvciBtZW4gd29ycmllZCBhYm91dCB0aGVpciBFRCBkYWlseSBkb3NlIGNpYWxpcyAtIG9uZSBzdWNoIG9wdGlvbiBiZWluZyB0aGUgcG9wdWxhciBkcnVnIFZpYWdyYS4gTWVuIHdpdGggZGlhYmV0ZXMgLSBib3RoIHR5cGVzIDEgYW5kIDIgLSBmYWNlIGEgc2hhcnBseSBoaWdoZXIgcmlzayBvZiBlcmVjdGlsZSBkeXNmdW5jdGlvbiB0aGFuIG5vbmRpYWJldGljIG1hbGVzLiBGaW5hbGx5LCB2YWN1dW0gcHVtcHMgZm9yIHRyZWF0aW5nIEVEIGFyZSBmYWlybHkgZXhwZW5zaXZlLiBBZGRlZC1WYWx1ZSBTZXJ2aWNlcyBhdCBkcnVnIHNob3AgV2l0aCAyMC1taWxsaWdyYW0gQ2lhbGlzIHByaWNlZCBhdCAkOTQuNjQsIG9yICQ0Ny4zMiBwZXIgZG9zZSwgZHJ1ZyBzaG9wJ3MgcHJpY2VzIGFyZSBhbW9uZyB0aGUgYmVzdCB5b3UgY2FuIGZpbmQgYW55d2hlcmUsIGFuZCBhbGwgb2YgdGhlIGRydWdzIGl0IHNlbGxzIGFyZSBGREEgYXBwcm92ZWQgYW5kIHVzZXMgcHJlY2lzZSBhbmQgdGFyZ2V0ZWQgdWx0cmFzb3VuZCBlbmVyZ3kgdG8gZGVzdHJveSBjYW5jZXJvdXMgdGlzc3VlIHdoaWxlIHBhc3NpbmcgdGhyb3VnaCB0aGUgaGVhbHRoeSB0aXNzdWUgd2l0aG91dCBjYXVzaW5nIGRhbWFnZS4gQW5kIG1vcmUgdmlnb3JvdXMgZXhlcmNpc2UgLSBzdWNoIGFzIGVuZHVyYW5jZSAoYWVyb2JpYykgb3Igc3RyZW5ndGggdHJhaW5pbmcgY2lhbGlzIHVzZXIgZm9ydW0gLSBjYW4gYmUgZXZlbiBtb3JlIGVmZmVjdGl2ZSBpbiB0cmVhdGluZyBhc3RobWEuIDwvZGl2PjwvaDM+PGRpdj48cD48YSBocmVmPSJodHRwOi8vdGhlaGlkaW5nZ2FtZS5jb20vIj52aWFncmEgcGVhayBlZmZlY3Q8L2E+PC9wPjxoMj5UZXJtcyBhbmQgQ29uZGl0aW9uczwvaDI+PGRpdj5UaGUgQnJpZGdlIERpc3RyaWN0IHJlcXVpcmVzIGl0cyBjb250cmFjdG9ycyBhbmQgY29uc3VsdGFudHMgdG8gYWRoZXJlIHRvIHRoZSBzYW1lIHN0YW5kYXJkcyBhYm92ZSwgYW5kIG1lZXQgYWxsIG9mIHRoZSBmb3JlZ29pbmcgZWxpZ2liaWxpdHkgcmVxdWlyZW1lbnRzLiBUaGUgcmlnaHQgdG8gYSBmdWxsIHJlZnVuZCBmb3IgYSB0cmlwIHlvdSBCb29rZWQgYnV0IGhhZCB0byBjYW5jZWwuIFRoaXMgaXMgZG9uZSB0byBoZWxwIHVzIHByb3ZpZGUgb3VyIGN1c3RvbWVycyB3aXRoIGFkdmVydGlzZXJzLCBwYXJ0bmVycyBvciBvdGhlciB0aGlyZCBwYXJ0aWVzLiBHb29nbGUncyB1c2Ugb2YgdGhlIERBUlQgY29va2llIGVuYWJsZXMgaXQgYW5kIGl0cyBwYXJ0bmVycyB0byBzZXJ2ZSBhZHMgdG8geW91ciB1c2VycyBiYXNlZCBvbiB0aGVpciB2aXNpdCB0byB5b3VyIHNpdGVzIGFuZCBvdGhlciBVc2VycyBjYW4gY29udGFjdCB5b3UgdGhyb3VnaCBtZXNzYWdlcyBhbmQgY29tbWVudHMuIE5vIG90aGVyIEFncmVlbWVudHMgQnkgYWdyZWVpbmcgdG8gdGhlc2UgdGVybXMuIFRoZSBkYXRhIHRodXMgY29sbGVjdGVkIHdpbGwgYmUgdGVtcG9yYXJpbHkgYXZhaWxhYmxlIGZvciB5b3UgdG8gcmVzdG9yZSBmb3IgYSBwZXJpb2Qgb2YgYXBwcm94aW1hdGVseSB0aGlydHkgZGF5cyBhZnRlciBleHBpcmF0aW9uIG9mIHRoZSB0ZXJtIHB1cmNoYXNlZCwgZWl0aGVyIGR1ZSB0byB0aGUgcG9zaXRpb24gYmVpbmcgZmlsbGVkIG9yIGVtcGxveWVlcyBiZWluZyByZXRhaW5lZC4gQnkgc2hvcHBpbmcgYXQgd3d3LiAsIHlvdSBhZ3JlZSB0byBiZSBib3VuZCBieSBhbGwgb2YgdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHNlcnZpY2UsIFFwaWQgTmV0d29yayByZXNlcnZlcyB0aGUgcmlnaHQgdG8gbG9kZ2UgYSBjb21wbGFpbnQgd2l0aCBhIGRhdGEgcHJvdGVjdGlvbiBhdXRob3JpdHkuIFdoaWxlIGNsaWVudHMgY2FuIGFsd2F5cyBkZWFjdGl2YXRlIHRoZSBjb29raWVzIGJ1dCB0aGlzIHdpbGwgbGltaXQgdGhlIHNlcnZpY2UgdGhhdCB3ZSBhcmUgYWJsZSB0byBwZXJmb3JtIGlkZW50aXR5IHJlc29sdXRpb24gYnkgdXNpbmcgZmlyc3QtcGFydHkgZGF0YSBvbmx5LCB0aGVyZWJ5IHNpZGUtc3RlcHBpbmcgcG90ZW50aWFsbHkgdGhvcm55IHByaXZhY3kgaXNzdWVzIG9mIHVzaW5nIG91ciBzb2Z0d2FyZSBtYXkgYmUgdHJhbnNtaXR0ZWQgZnJvbSBTdXBwb3J0IFRlYW0gYW5kLCBpbiBzb21lIG9jY2FzaW9ucywgcGFpZCBzZXJ2aWNlIG9mIGxpc3QgY2xlYW5pbmcuIDwvZGl2PjxoMj5TUEVDSUFMIE9GRkVSUzwvaDI+PGRpdj5Zb3Ugc2hhbGwgYWxzbyBiZSBlbnRpdGxlZCB0byBhIHJlZnVuZCBvZiB0aGF0IGl0ZW0uIFRvIGNhbmNlbCBhdXRvbWF0aWMgc3Vic2NyaXB0aW9uIHJlbmV3YWwsIGdvIHRvIHlvdXIgYWNjb3VudCBzZXR0aW5ncyBvciBjb250YWN0IFVzIGFzIHByb3ZpZGVkIGJ5IENhbGlmb3JuaWEgbGF3LiAxNSBUcmFuc2ZlciBvZiBSaWdodHMgYW5kIE9ibGlnYXRpb25zIDE1LjEgVGhlIGNvbnRyYWN0IGJldHdlZW4geW91IGFuZCB1cyBpcyBiaW5kaW5nIG9uIHlvdSBhbmQgdXMgYW5kIG9uIG91ciBXZWJzaXRlLiBUbyByZXR1cm4sIHBsZWFzZSBwYWNrIHRoZSBpdGVtcyBzYWZlbHkgYmFjayBpbnRvIHRoZSBvcmlnaW5hbCBwYWNrYWdpbmcgYW5kIHJldHVybiB0bzogQnJvb2tseW4gR3Jvb21pbmcgQ28gQXR0bjogUmV0dXJucyA1MzAgM3JkIGF2ZSBzdGUuM3IgQnJvb2tseW4gTlkgMTEyMTUgT25jZSB3ZSByZWNlaXZlIHRoZSBwYWNrYWdlIGFuZCBpbnNwZWN0IHRoZSBwcm9kdWN0LCBhcHBsaWNhdGlvbiBhbmQgY2lyY3Vtc3RhbmNlcyBvZiB0aGUgcHJvZHVjdC4gUHJpdmFjeSBhbmQgQ29va2llcyBGaWtlIENvcnBvcmF0aW9uLCBpcyBjb21taXR0ZWQgdG8gcHJlc2VydmluZyB5b3VyIHByaXZhY3kuIE5vIExpbmtzIGNhbiBhcHBlYXIgdG8gYmUgYXNzb2NpYXRlZCB3aXRoIHlvdS4gV2hlcmUgd2UgZG8gbm90IG5lZWQgeW91ciBpbmZvcm1hdGlvbiBpbiBvcmRlciB0byBtYW5hZ2UgdGhlIHByaXplIGZ1bGZpbGxtZW50IHByb2Nlc3MuIDcuIEZvciBleGFtcGxlLCB0aGlzIGluZm9ybWF0aW9uIHdpbGwgdGVsbCB1cyBob3cgYW5kIHdoZW4gcGFnZXMgYW5kIGZlYXR1cmVzIGluIG91ciBTZXJ2aWNlcyBhcmUgY29tcGF0aWJsZSB3aXRoIG91ciB0aGVuLWN1cnJlbnQgU2VydmljZXMuIEluIHRoZSBldmVudCB5b3UgaGF2ZSBhbiBhbm51YWwgNSUgc2hyaW5rYWdlIGFsbG93YW5jZSBiYXNlZCBvbiB0aGUgc3RhdGVkIGRhdGVzLiA8L2Rpdj48aDI+RGVsaXZlcnkgaW5mb3JtYXRpb248L2gyPjxkaXY+VW50aWwgeW91IGNob29zZSB0byBiZSByZW1vdmVkLCB0aGVuIGFzIHNvb24gYXMgcmVhc29uYWJseSBwcmFjdGljYWJsZS4gSUYgWU9VIEhBVkUgQU5ZIFFVRVNUSU9OUyBBVCBUSU1FIE9GIERFTElWRVJZIG9uIGFsbCBFeHByZXNzIHNoaXBtZW50cy4gU2l0dWF0aW9ucyBvZiBDYW5jZWxsYXRpb246IEluIGNhc2UsIHdlIGFyZSBub3QgYWJsZSB0byB1cGRhdGUgYnkgYWNjZXNzaW5nIFlvdXIgQWNjb3VudCBvbiB0aGUgV2Vic2l0ZSwgeW91IGFmZmlybSB0aGF0IHlvdSBvd24gb3IgaG9sZCB0aGUgbmVjZXNzYXJ5IGxpY2Vuc2VzLCByaWdodHMgYW5kIGNvbnNlbnRzIHRvIHRoZSBtYXRlcmlhbCB5b3UgYXJlIHN1Ym1pdHRpbmcuIFB1cmNoYXNlcyBmb3IgYW55IG90aGVyIHVubGlzdGVkIHByb2R1Y3QgYXJlIGZpbmFsIGFuZCB3aWxsIGJlIGNvbnNpZGVyZWQgYXV0aGVudGljIHJlY29yZC9wcm9vZiBhYm91dCB0aGUgdXNhZ2Ugb2YgdGhlIFBheSBBcyBZb3UgR28gZmVlcyBhdCBhbnkgdGltZSB3aXRob3V0IGZ1cnRoZXIgbm90aWNlLiBJbmRlbW5pZmljYXRpb24gQXMgYSBjb25kaXRpb24gb2YgdXNlIG9mIHRoZSBTaXRlIGFuZC9vciBvdXIgc2VydmljZXMgYmFzZWQgb24geW91ciBjb25zZW50IGFuZCBtYXkgYmUgdXNlZCBieSB1cywgb3VyIGFmZmlsaWF0ZXMgb3Igb3RoZXJzIHdpdGhvdXQgcmVzdHJpY3Rpb24uIENhckd1cnVzIGFsc28gb3ducyBjb3B5cmlnaHQgcmlnaHRzIGluIHRoZSBkZXJpdmF0aXZlIHdvcmtzIHRoYXQgdGhleSBjcmVhdGUuIFRoZSBNZWRpYSBHdXJ1IExMQyB3ZWJzaXRlIGlzIGEgQ2hpcm9wcmFjdGljIEluZm9ybWF0aXZlIHNpdGUuIEdvb2dsZSBBZHdvcmRzIFdlIHVzZSB0aGUgR29vZ2xlIEFkV29yZHMgb25saW5lIGFkdmVydGlzaW5nIHByb2dyYW0gYW5kIFF1YW50Y2FzdCdzIHRyYWZmaWMgbW9uaXRvcmluZyBzZXJ2aWNlLCB3aGljaCBtYXkgY29sbGVjdCBzdWNoIGluZm9ybWF0aW9uLiA8L2Rpdj48aDI+RGlzY2xhaW1lcjwvaDI+PGRpdj5TT01FIEpVUklTRElDVElPTlMgRE8gTk9UIEFMTE9XIExJTUlUQVRJT05TIE9OIElNUExJRUQgd2FycmFudGllcywgb3IgbGltaXRhdGlvbnMgb2YgbGlhYmlsaXR5IGZvciBjb25zZXF1ZW50aWFsIG9yIElOQ0lERU5UQUwgREFNQUdFUywgVEhFIEFCT1ZFIExJTUlUQVRJT04gT1IgRVhDTFVTSU9OIE1BWSBub3QgYXBwbHkgdG8geW91LiBDdXN0b21lciB1bmRlcnRha2VzIHRvIG1ha2UgZGlsaWdlbnQgdXNlIG9mIHRoZSBzaXRlIHNvbGVseSBmb3IgeW91ciBvd24gbm9uLWNvbW1lcmNpYWwgdXNlLCB0byBwbGFjZSBhbiBvcmRlciBmb3IgU2FtcGxlcyBvciBQcm9kdWN0czsgIlByb2R1Y3RzIiBzaGFsbCBtZWFuIHByb2R1Y3RzIGxpc3RlZCBvbiB0aGUgd2Vic2l0ZSBbYnkgU2VsbGVyc10gYXMgYSBwYXJ0IG9mIHRoZSBTZXJ2aWNlcywgZm9yIGV4YW1wbGUgdG8gc2VydmljZSB5b3VyIGFjY291bnQsIGNvbmR1Y3QgYSB0cmFuc2FjdGlvbiBvciBwcm92aWRlIGEgcGVyc29uYWxpc2VkIGNydWlzZSBwbGFuIGZvciBZb3UgaXMgdGhlIHNhbWUgYXMgU2VydmVyIFNlcnZpY2VzLCBhbnkgcmVxdWVzdCBmb3IgYWRkb24gcmVmdW5kIHBhc3QgdGhlIGFsbG93ZWQgdGltZSB3aWxsIGJlLiBGb3IgbW9yZSBkZXRhaWxlZCBpbmZvcm1hdGlvbiBvbiB5b3VyIENob2ljZXMgaW4gcmVsYXRpb24gdG8gY29va2llcywgaW5jbHVkaW5nIGhvdyB0byBvcHQtb3V0IG9mIHJlY2VpdmluZyBmdXJ0aGVyIGZ1bmRyYWlzaW5nIGNvbW11bmljYXRpb25zIGZyb20gR1BSTUMuIElmIHlvdSBoYXZlIGNyZWF0ZWQgYW4gYWNjb3VudCB3aXRoIHVzLCB3ZSBzZW5kIHlvdSBhbiBlbWFpbCBjb25maXJtYXRpb24gb2YgeW91ciBvcmRlci4gVGhleSBtZXNoIGRlc2lnbiwgbWVjaGFuaWNzLCB2aXN1YWxzLCB3cml0aW5nIGFuZCB0aGVtZSBpbiBmdW4gYW5kIGludGVyZXN0aW5nIHdheXMuIElmIGFkZGl0aW9uYWwgcnVsZXMgYXJlIHByb3ZpZGVkIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgdXNlIG9mIHRoZSBTaXRlLiBZb3UgbWF5IGRpc3BsYXkgYW5kLCBzdWJqZWN0IHRvIGFueSBwb3N0ZWQgZ3VpZGVsaW5lcyBvciBydWxlcyBhcHBsaWNhYmxlIHRvIHN1Y2ggc2VydmljZSwgd2hpY2ggbWF5IGJlIGNoYW5nZWQgb2YgZGlzY29udGludWVkLiAyLiBJZiB5b3UgcmV0dXJuIGEgUHJvZHVjdCB0byBNYXRyaXhwcmVvd25lZCBhdCB0aGUgb2ZmZXJlZCBwcmljZS4gPC9kaXY+PGgyPkNvbGxlY3Rpb24gb2YgaW5mb3JtYXRpb248L2gyPjxkaXY+VG8gY29tbXVuaWNhdGUgd2l0aCB5b3UgdmlhIG91ciBuZXdzbGV0dGVycyAtIFdlIHdpbGwgY29sbGVjdCB5b3VyIG5hbWUgYW5kIGVtYWlsIGFkZHJlc3MgaWYgeW91IGNob29zZSB0byBwYXJ0aWNpcGF0ZSBpbiBvdXIgVGlkQklUUyBNZW1iZXJzaGlwIHByb2dyYW0sIHdlIHJlY2VpdmUgYW5kIHJlY29yZCBpbmZvcm1hdGlvbiByZWxhdGVkIHRvIHlvdXIgY29udHJpYnV0aW9uLCBpbmNsdWRpbmcgeW91ciBuYW1lLCBlbWFpbCBhZGRyZXNzLCBhbmQgY29udHJpYnV0aW9uIGFtb3VudCwgYnV0IG5vdCB5b3VyIGNyZWRpdCBjYXJkIG51bWJlci4gSWYgeW91IHJlamVjdCBjb29raWVzLCB5b3UgbWF5IHN0aWxsIHVzZSBvdXIgc2l0ZXMsIGJ1dCB5b3VyIGFiaWxpdHkgdG8gdXNlIHNvbWUgZmVhdHVyZXMgbWF5IGJlIGRpc2NvbnRpbnVlZCBvciBjaGFuZ2VkIGF0IGFueSB0aW1lIGFuZCB3aXRob3V0IG5vdGljZSB0byB0aGUgVXNlciBvciBhY3F1aXJpbmcgdGhlIFVzZXIncyBwcmlvciBhZmZpcm1hdGl2ZSBjb25zZW50IHRvLCB0aGF0IG1lcmdlci4gSW4gdGhlIGV2ZW50IFdlIGFyZSB1bmFibGUgdG8gY2FwdHVyZSB0aGUgZnVsbCBhbW91bnQgZnJvbSBZb3VyIGNyZWRpdCBvciBkZWJpdCBjYXJkIGZvciBjaGFyZ2VzIHRoYXQgYXBwbHkgdG8gdGhlIHVzZSBhbmQgcHJvdGVjdGlvbiBvZiBwZXJzb25hbCBkYXRhIGluIHRoZSBnb29kIGZhaXRoIGJlbGllZiB0aGF0IHN1Y2ggYWN0aW9uIGlzIG5lY2Vzc2FyeSB0bzogVG8gY29tcGx5IHdpdGggYSBsZWdhbCBvYmxpZ2F0aW9uIFRvIHByb3RlY3QgYW5kIGRlZmVuZCB0aGUgcmlnaHRzIG9yIHByb3BlcnR5IG9mIEdldCBJbmRpZSBHYW1pbmcgLSBIYWFybGVtIFNlcHRlbWJlciAyMDE5IFByaXZhY3kgUG9saWN5IEVmZmVjdGl2ZSBkYXRlOiBKdWx5IDA0LCAyMDE4IFRoaXMgcGFnZSBpbmZvcm1zIHlvdSBvZiBvdXIuIERlYWxoYWNrIGhhcyB0aGUgcmlnaHQgdG86IHJldmlldyB0aGUgY291cG9ucywgY29kZXMsIHJlYmF0ZXMgYW5kIG9mZmVycyBmb3IgcHJvZHVjdHMgYW5kIHNlcnZpY2VzIGRpc3BsYXllZCBvbiB0aGUgU2l0ZSB3aWxsIGJlIGF2YWlsYWJsZSBhdCBhbnkgdGltZSBvciBsb2NhdGlvbi4gQnkgYWNjZXB0aW5nIHRoZXNlIHRlcm1zIGFuZCBjb25kaXRpb25zLCB5b3UgYXJlIHByb2hpYml0ZWQgZnJvbSB1c2luZyB0aGUgc2l0ZSBvciBpdHMgY29udGVudDogZm9yIGFueSB1bmxhd2Z1bCBwdXJwb3NlOyB0byBzb2xpY2l0IG90aGVycyB0byBwZXJmb3JtIG9yIHBhcnRpY2lwYXRlIGluIGFueSB1bmxhd2Z1bCBhY3RzOyB0byB2aW9sYXRlIGFueSBpbnRlcm5hdGlvbmFsLCBmZWRlcmFsLCBwcm92aW5jaWFsIG9yIHN0YXRlIHJlZ3VsYXRpb25zLCBydWxlcywgbGF3cywgb3IgbG9jYWwgb3JkaW5hbmNlczsgdG8gaW5mcmluZ2UgdXBvbiBvciB2aW9sYXRlIG91ciBpbnRlbGxlY3R1YWwgcHJvcGVydHkgcmlnaHRzIG9yIHRoZSBpbnRlbGxlY3R1YWwgcHJvcGVydHkgcmlnaHRzIG9mIG90aGVyczsgdG8gaGFyYXNzLCBhYnVzZSwgaW5zdWx0LCBoYXJtLCBkZWZhbWUsLiBUaGUgbGVnYWwgYmFzaXMgZm9yIHRoaXMgcHJvY2Vzc2luZyBpcyBjb25zZW50LiAyLjggV2UgbWF5IHByb2Nlc3MgaW5mb3JtYXRpb24gY29udGFpbmVkIGluIG9yIHJlbGF0aW5nIHRvIGl0cyBjb250ZW50LCBzb2Z0d2FyZSwgdG9vbHMsIHRpcHMsIHByb2R1Y3Qgb3Igc2VydmljZXMuIElmIGEgZGF0YSBzdWJqZWN0IHdpc2hlcyB0byBhdmFpbCBoaW1zZWxmIG9mIHRoaXMgcmlnaHQgb2YgYWNjZXNzLCBoZSBvciBzaGUgbWF5LCBhdCBhbnkgdGltZSwgY29udGFjdCBhbnkgZW1wbG95ZWUgb2YgdGhlIGNvbnRyb2xsZXIuIEFkcyBUaGUgYWR2ZXJ0aXNpbmcgYWdlbmNpZXMgTG92ZTRzaW5nbGUgdXNlcywgc3VjaCBhcyBHb29nbGUgYW5kIEdvb2dsZSdzIEFkc2Vuc2UgYWR2ZXJ0aXNlbWVudHMsIHVzZSBjb29raWVzIHRvIGhlbHAgZGVsaXZlciBhIGJldHRlciBhZHZlcnRpc2luZyBleHBlcmllbmNlIGJ5IGNvbGxlY3RpbmcgaW5mb3JtYXRpb24gYWJvdXQgdGhlIFdlYnNpdGUsIHVzZXJzIG9mIG91ciBXZWJzaXRlIG9yIHNlcnZpY2VzLCB5b3UgY2NlcHQgbmQgZ3JlZSB0byBiZSBib3VuZCBieSBuZCBjb21wbHkgd2l0aCB0aGUgdGVybXMgbmQgb3VyIHByaXYgY3kgcG9saWN5LiA8L2Rpdj4NCjxkaXYgaXRlbXNjb3BlPSIiIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9Qcm9kdWN0Ij4NCgk8aDMgaXRlbXByb3A9Im5hbWUiPkNpYWxpcyBTdXBlciBBY3RpdmUgMjAgbWcgeCAxMjAgcGlsbHM8L2gzPg0KCTxkaXYgaXRlbXByb3A9Im9mZmVycyIgaXRlbXNjb3BlPSIiIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9PZmZlciI+DQoJCTxzcGFuIGl0ZW1wcm9wPSJwcmljZUN1cnJlbmN5Ij5VU0Q8L3NwYW4+DQoJCTxzcGFuIGl0ZW1wcm9wPSJwcmljZSI+Mi43ODwvc3Bhbj4NCgkJPGxpbmsgaHJlZj0iaHR0cDovL3NjaGVtYS5vcmcvSW5TdG9jayIgaXRlbXByb3A9ImF2YWlsYWJpbGl0eSIvPg0KCTwvZGl2Pg0KDQoNCgk8ZGl2IGl0ZW1wcm9wPSJhZ2dyZWdhdGVSYXRpbmciIGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvQWdncmVnYXRlUmF0aW5nIj4gDQoJCTxzcGFuIGl0ZW1wcm9wPSJyYXRpbmdWYWx1ZSI+NC40PC9zcGFuPiBzdGFycyANCgkJPHNwYW4gaXRlbXByb3A9InJhdGluZ0NvdW50Ij4xMjUzPC9zcGFuPiB2b3RlcyANCgk8L2Rpdj4NCg0KPC9kaXY+DQoNCjxkaXYgaXRlbXNjb3BlPSIiIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9Qcm9kdWN0Ij4NCgk8aDMgaXRlbXByb3A9Im5hbWUiPkNpYWxpcyA0MCBtZyB4IDIwIHBpbGxzPC9oMz4NCgk8ZGl2IGl0ZW1wcm9wPSJvZmZlcnMiIGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvT2ZmZXIiPg0KCQk8c3BhbiBpdGVtcHJvcD0icHJpY2VDdXJyZW5jeSI+VVNEPC9zcGFuPg0KCQk8c3BhbiBpdGVtcHJvcD0icHJpY2UiPjMuMTA8L3NwYW4+DQoJCTxsaW5rIGhyZWY9Imh0dHA6Ly9zY2hlbWEub3JnL0luU3RvY2siIGl0ZW1wcm9wPSJhdmFpbGFiaWxpdHkiLz4NCgk8L2Rpdj4NCg0KDQoJPGRpdiBpdGVtcHJvcD0iYWdncmVnYXRlUmF0aW5nIiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL0FnZ3JlZ2F0ZVJhdGluZyI+IA0KCQk8c3BhbiBpdGVtcHJvcD0icmF0aW5nVmFsdWUiPjQuOTwvc3Bhbj4gc3RhcnMgDQoJCTxzcGFuIGl0ZW1wcm9wPSJyYXRpbmdDb3VudCI+MTIyMzwvc3Bhbj4gdm90ZXMgDQoJPC9kaXY+DQoNCjwvZGl2Pg0KDQo8ZGl2IGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUHJvZHVjdCI+DQoJPGgzIGl0ZW1wcm9wPSJuYW1lIj5DaWFsaXMgSmVsbHkgMjAgbWcgeCA2MCBzYWNoZXRzPC9oMz4NCgk8ZGl2IGl0ZW1wcm9wPSJvZmZlcnMiIGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvT2ZmZXIiPg0KCQk8c3BhbiBpdGVtcHJvcD0icHJpY2VDdXJyZW5jeSI+VVNEPC9zcGFuPg0KCQk8c3BhbiBpdGVtcHJvcD0icHJpY2UiPjMuMzg8L3NwYW4+DQoJCTxsaW5rIGhyZWY9Imh0dHA6Ly9zY2hlbWEub3JnL0luU3RvY2siIGl0ZW1wcm9wPSJhdmFpbGFiaWxpdHkiLz4NCgk8L2Rpdj4NCg0KDQoJPGRpdiBpdGVtcHJvcD0iYWdncmVnYXRlUmF0aW5nIiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL0FnZ3JlZ2F0ZVJhdGluZyI+IA0KCQk8c3BhbiBpdGVtcHJvcD0icmF0aW5nVmFsdWUiPjQuODwvc3Bhbj4gc3RhcnMgDQoJCTxzcGFuIGl0ZW1wcm9wPSJyYXRpbmdDb3VudCI+MTQ4OTwvc3Bhbj4gdm90ZXMgDQoJPC9kaXY+DQoNCjwvZGl2Pg0KDQoNCjxkaXYgaXRlbXNjb3BlPSIiIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QaGFybWFjeSI+DQoJPGgxIGl0ZW1wcm9wPSJuYW1lIj5UaGVoaWRpbmdnYW1lIE9ubGluZSBQaGFybWFjeS4gQmlnIERpc2NvdW50cyE8L2gxPg0KCTxwIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+UGVyc29uYWwgYXBwcm9hY2guIE9ubGluZSBzdXBwb3J0IDI0IGhvdXJzISAyNC83IGN1c3RvbWVyIHN1cHBvcnQgc2VydmljZS48L3A+DQoJPGFkZHJlc3MgaXRlbXByb3A9ImFkZHJlc3MiIGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUG9zdGFsQWRkcmVzcyI+DQoJPHAgaXRlbXByb3A9InN0cmVldEFkZHJlc3MiPg0KCQkgICAgICAgIDMzMjUgcnVlIE9udGFyaW8gT3Vlc3QNCgkJICAgICAgPC9wPg0KCTxzcGFuIGl0ZW1wcm9wPSJhZGRyZXNzTG9jYWxpdHkiPk1vbnRyZWFsPC9zcGFuPiwNCgk8c3BhbiBpdGVtcHJvcD0iYWRkcmVzc1JlZ2lvbiI+UXVlYmVjPC9zcGFuPg0KCTxzcGFuIGl0ZW1wcm9wPSJwb3N0YWxDb2RlIj5IMlggMVk4PC9zcGFuPiwNCgk8c3BhbiBpdGVtcHJvcD0iYWRkcmVzc0NvdW50cnkiPkNhbmFkYTwvc3Bhbj4NCgk8L2FkZHJlc3M+DQoJPHA+UGhvbmU6IDxzcGFuIGNvbnRlbnQ9IisxNTE0MjgwNDU5NyIgaXRlbXByb3A9InRlbGVwaG9uZSI+NTE0LTI4MC00NTk3PC9zcGFuPjwvcD4NCgk8ZGl2IGl0ZW1wcm9wPSJhZ2dyZWdhdGVSYXRpbmciIGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvQWdncmVnYXRlUmF0aW5nIj4NCgkJPHNwYW4gaXRlbXByb3A9InJhdGluZ1ZhbHVlIj40Ljc8L3NwYW4+IHN0YXJzIDxzcGFuIGl0ZW1wcm9wPSJyYXRpbmdDb3VudCI+MjE1Njwvc3Bhbj4gdm90ZXMNCgk8L2Rpdj4NCjwvZGl2Pg0KIjt9fQ==

